#!/bin/bash
#
# "little" shell-script to mount/umount an encrypted LUKS volume file,
# 
# $Id$

PROG=`basename $0`
E_OPTERROR=65

usage() {
cat << EOF

$PROG, Manage LUKS volume file (u)mount

Usage: $PROG -a ACTION VOLUME_FILE
    -a ACTION	What to do, mount or umount volume file
    VOLUME_FILE	Name of LUKS volume file (extension has to be ".vol")

EOF
    exit $E_OPTERROR
}

error() {
    echo $2
    exit $1
}

# Check if volume is linked to any loop device
has_loop() {
    losetup --all|grep $1 2>&1 > /dev/null
    RES=`echo $?`
    if [ $RES -eq 0 ]
    then
	error $RES "FAILED: A loop device already exists for $1"
    else
	return 0
    fi
}

# Check... if volume mounted ?
is_mounted() {
    mount|grep $1 2>&1 > /dev/null
    RES=`echo $?`
    if [ $RES -eq 0 ]
    then
	error $RES "FAILED: Crypted volume is mounted"
    else
	return 0
    fi
}

# Do volume has a device-mapper ?
has_mapper() {
    ls /dev/mapper/${VOLDEV}_crypt > /dev/null 2>&1
    RES=`echo $?`
    if [ $RES -eq 0 ]
    then
	return 0
    else
	error $RES "FAILED: Crypto device doesn't exists for $1"
    fi
}

mymount() {
    VOL=$1
    VOL_DEVICE=`basename $VOL .vol`

    is_mounted ${VOL_DEVICE}_crypt
    # Find a free loop device
    LOOP00=`losetup --find`

    # Check loop device and even loop volume on it
    has_loop $VOL && losetup $LOOP00 $VOL

    # Open LUKS volume, associate it to device-mapper
    sudo cryptsetup luksOpen $LOOP00 ${VOL_DEVICE}_crypt

    # Find another free loop device
    LOOP01=`losetup --find`

    # Check if device-mapper associated to a loop device, if not then do
    # it
    has_loop /dev/mapper/${VOL_DEVICE}_crypt && losetup $LOOP01 /dev/mapper/${VOL_DEVICE}_crypt

    # Now device ready to be mounted, with root mount or by fstab file
}

myumount() {
    VOL=$1
    VOLDEV=`basename $VOL .vol`

    is_mounted ${VOLDEV}_crypt
    has_mapper ${VOLDEV}_crypt
    MAPDEV=`sudo cryptsetup status ${VOLDEV}_crypt|awk '/is active:/ { print $1 }'`
    LOOP00=`losetup --associated ${MAPDEV} | cut -d":" -f1`
    losetup --detach $LOOP00

    LOOP01=`losetup --associated ${VOL} | cut -d":" -f1`
    sudo cryptsetup luksClose ${VOLDEV}_crypt
    losetup --detach $LOOP01
}

# Main code
if [ $# -eq 0 ]
then
    error 1 "ERROR: Missing arguments"
fi

while getopts ":dvha:" OPTIONS
do
    case $OPTIONS in
	d)
	    set -x
	    ;;
	v)
	    BEVERBOSE=true
	    ;;
	h)
	    usage
	    ;;
	a)
	    eval PARAMETER="`echo \\$$OPTIND`"
	    case $OPTARG in
		mount)
		    mymount $PARAMETER
		    ;;
		umount)
		    myumount $PARAMETER
		    ;;
	    esac
	    ;;
        *)
	    error 1 "No matching option for -$OPTARG, retry."
	    ;;
	:)
	    error 1 "Missing parameter for $OPTARG"
	    ;;
    esac 
done

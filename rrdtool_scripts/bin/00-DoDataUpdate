#!/bin/sh
# Mise a jour des fichiers RRD

# $Id$

export PATH=/usr/local/bin:/usr/bin:/bin:/sbin:/usr/sbin
export LANG=fr_FR@euro

HOST=../data/`hostname`
LGDATE=`date +%s`

SAR=`which sar` # we need sysstat package >= 5.0.6 because of swap
#memory fetching, sar 4.0.3 put swap memory info onto 10th column and
#this version (5.0.6) put it on the 9th one.
if test $SAR && test -x $SAR # some update depends of sar tool
then
    #--------------------------------------------------------------------------------------
    # Usage CPU (User, Nice, System et Idle) et Nombre Processes
    #--------------------------------------------------------------------------------------
    echo "---> CPU"
    RRDFILE=$HOST.sys.cpu.rrd
    if [ -e $RRDFILE ]
    then
	nb_processes=`sar -q | tail -2 | head -1 | awk '{ print $3 }'`
	CPU_user=`sar -u | tail -2 | head -1 | awk '{ print $3 }' | sed 's/\,/\./g'`
	CPU_nice=`sar -u | tail -2 | head -1 | awk '{ print $4 }' | sed 's/\,/\./g'`
	CPU_system=`sar -u | tail -2 | head -1 | awk '{ print $5 }' | sed 's/\,/\./g'`
	CPU_idle=`sar -u | tail -2 | head -1 | awk '{ print $7 }' | sed 's/\,/\./g'`
	rrdtool update $RRDFILE $LGDATE:$nb_processes:$CPU_user:$CPU_nice:$CPU_system:$CPU_idle 
    else
	rrdtool create $RRDFILE --start $LGDATE DS:nbprocs:GAUGE:600:0:500 DS:cpuU:GAUGE:600:0:100 DS:cpuN:GAUGE:600:0:100 DS:cpuS:GAUGE:600:0:100 DS:cpuI:GAUGE:600:0:100 RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576 
    fi

    #--------------------------------------------------------------------------------------
    # Charge Machine (load average)
    #--------------------------------------------------------------------------------------
    echo "---> load"
    RRDFILE=$HOST.sys.load.rrd
    if [ -e $RRDFILE ]
    then
	LOAD_AV=`sar -q | tail -2 | head -1 | awk '{ print $5 }' | sed 's/\,/\./g'`
	rrdtool update $RRDFILE $LGDATE:$LOAD_AV
    else
	rrdtool create $RRDFILE --start $LGDATE DS:la:GAUGE:600:0:U RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576
    fi

    #--------------------------------------------------------------------------------------
    # Etat memoire (reelle et swap)
    #--------------------------------------------------------------------------------------
    echo "---> memoire"
    RRDFILE=$HOST.sys.memory.rrd
    if [ -e $RRDFILE ]
    then
	RM_percent=`sar -r | tail -2 | head -1 | awk '{ sub('/\,/', ".", $4); print $4 }'`
	SM_percent=`sar -r | tail -2 | head -1 | awk '{ sub('/\,/', ".", $9); print $9 }'`
	rrdtool update $RRDFILE $LGDATE:$RM_percent:$SM_percent
    else
	rrdtool create $RRDFILE --start $LGDATE DS:RMpercent:GAUGE:600:0:U DS:SMpercent:GAUGE:600:0:U RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576
    fi
fi # if sar does not exists it ends here.

#--------------------------------------------------------------------------------------
# Espace disque
#--------------------------------------------------------------------------------------
echo "---> disque"
PARTITIONS=`df -l | awk '/^.dev/{ print $6 }'`
for P in $PARTITIONS
do  
    RRDFILE=$HOST.hd.part.`echo $P | sed -e 's/\//_slash_/g'`.rrd
    if [ -e $RRDFILE ]
    then
        VALUE=`df $P | tail -1 | awk '{ print $5 }' | sed -e s/%//`
        rrdtool update $RRDFILE $LGDATE:$VALUE
    else
        rrdtool create $RRDFILE --start $LGDATE DS:percent:GAUGE:600:0:100 RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576
    fi
done

#--------------------------------------------------------------------------------------
# Reseau (internet et local) / Latence
#--------------------------------------------------------------------------------------
echo "---> reseau"
IFACES=`awk -F":" '/:/{ if( !($1 ~ "lo")) print $1 }' /proc/net/dev`
for I in $IFACES
do
    RRDFILE=$HOST.net.$I.rrd
    if [ -e $RRDFILE ]
    then
	ligne=`cat /proc/net/dev | grep $I | cut -d":" -f 2`
	    IN=`echo $ligne | cut -d" " -f 1`
	    OUT=`echo $ligne | cut -d" " -f 9`
	rrdtool update $RRDFILE $LGDATE:$IN:$OUT
    else
	rrdtool create $RRDFILE --start $LGDATE \
	DS:IN:COUNTER:600:0:U \
	DS:OUT:COUNTER:600:0:U \
	RRA:AVERAGE:0.5:1:576 \
	RRA:AVERAGE:0.5:6:576 \
	RRA:AVERAGE:0.5:24:576 \
	RRA:AVERAGE:0.5:288:576 
    fi
    # Latency test is done over WAN iface.
    if [ $I == 'ppp0' ]
    then
	RRDFILE=$HOST.net.${I}.latence.rrd
	if [ -e $RRDFILE ]
	then
	    # For latency it is better to do traceroute to ISP website.
	    FIRSTHOP=`traceroute -n www.nerim.net 2>&1 | awk -F" " '{ print $2 }' | head -2 | tail -1`
	    P=`ping -c3 $FIRSTHOP | grep round`
	    LATmin=`echo $P | cut -d" " -f4 | cut -d"/" -f1`
	    LATmax=`echo $P | cut -d"/" -f5 | cut -d" " -f1`
	    rrdtool update $RRDFILE $LGDATE:$LATmin:$LATmax
	else
	    rrdtool create $RRDFILE --start $LGDATE DS:lat-min:GAUGE:600:0:U DS:lat-max:GAUGE:600:0:U RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576 
	fi
	RRDFILE=$HOST.net.${I}.vol.rrd
	if [ -e $RRDFILE ]
	then
	    IN_vol=`sudo ifconfig $I | grep "RX bytes" | cut -d":" -f2 | cut -d" " -f1`
	    OUT_vol=`sudo ifconfig $I | grep "TX bytes" | cut -d":" -f3 | cut -d" " -f1`
	    rrdtool update $RRDFILE $LGDATE:$IN_vol:$OUT_vol
	else
	    rrdtool create $RRDFILE --start $LGDATE DS:IN_vol:GAUGE:600:0:U DS:OUT_vol:GAUGE:600:0:U RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576
	fi
    fi
done

#--------------------------------------------------------------------------------------
# Requetes SQL (moyenne x 1000)
#--------------------------------------------------------------------------------------
echo "---> mysql"
MYSQLADMIN=`which mysqladmin` 
if test $MYSQLADMIN && test -x $MYSQLADMIN
then
    RRDFILE=$HOST.mysql.rrd
    if [ -e $RRDFILE ]
    then
	sql_cnx=`$MYSQLADMIN -uroot -pclaire2408 status | sed 's/^.*avg: //' | sed 's/\.//' | sed 's/ //'`
	rrdtool update $RRDFILE $LGDATE:$sql_cnx
    else
	rrdtool create $RRDFILE --start $LGDATE DS:sqlcnx:GAUGE:600:0:U RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576
    fi
fi

#--------------------------------------------------------------------------------------
# Uptime
#--------------------------------------------------------------------------------------
echo "---> uptime"
PERL=`which perl` 
if test $PERL && test -x $PERL
then
    RRDFILE=$HOST.sys.uptime.rrd
    if [ -e $RRDFILE ]
    then
	my_upt=`./uptime.pl`
	rrdtool update $RRDFILE $LGDATE:$my_upt
    else
	rrdtool create $RRDFILE --start $LGDATE DS:uptime:GAUGE:600:0:U RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576
    fi
fi

#--------------------------------------------------------------------------------------
# Temperature disques SCSI
#--------------------------------------------------------------------------------------
echo "---> temperature disques"
SMARTCTL=`which smartctl` 
if test $SMARTCTL && test -x $SMARTCTL
then
    SCSIDISKS=`df -l | grep ^.dev.sd | awk '{ print $1 }' | sed -e 's/.$//g'`
    for D in $SCSIDISKS
    do
	RRDFILE=$HOST.hd.temp.`echo $D | sed -e 's/\//_slash_/g'`.rrd
	if [ -e $RRDFILE ]
	then
	    temp=`sudo $SMARTCTL -H -A $D | grep -i -E 'current.*temperature' |cut -d: -f2 |sed -e 's/\ //g' -e 's/C//g'`
	    rrdtool update $RRDFILE $LGDATE:$temp
	else
	    rrdtool create $RRDFILE --start $LGDATE DS:temp:GAUGE:600:0:U RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576
	fi
    done
fi

#--------------------------------------------------------------------------------------
# Etat des mails
#--------------------------------------------------------------------------------------
echo "---> mail"
MAILQ=`sudo which mailq`
if test $MAILQ && test -x $MAILQ
then
    RRDFILE=$HOST.net.mail.queue.rrd
    if [ -e $RRDFILE ]
    then
	mail_in_queue=`sudo $MAILQ | grep -c "<"`
	rrdtool update $RRDFILE $LGDATE:$mail_in_queue
    else
	rrdtool create $RRDFILE --start $LGDATE DS:value:GAUGE:600:0:U RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576
    fi
    # Comptage des virus
    VIRUSLOG=/var/log/clamav/clamav.log
    if [ -e $VIRUSLOG ]
    then
    	RRDFILE=$HOST.net.mail.virus.rrd
    	if [ -e $RRDFILE ]
    	then
		virus=`sudo grep -c FOUND $VIRUSLOG`
		rrdtool update $RRDFILE $LGDATE:$virus
    	else
    		rrdtool create $RRDFILE --start $LGDATE DS:value:GAUGE:600:0:U RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576
    	fi
    fi
fi

#--------------------------------------------------------------------------------------
# Lectures et ecritures de secteurs sur les disques
#--------------------------------------------------------------------------------------
echo "---> Sectors IO"
IOSTAT=`which iostat` 
if test $IOSTAT && test -x $IOSTAT
then
    eval grep host /proc/partitions > /dev/null
    ISDEVFS=`echo $?` 
    if [ $ISDEVFS == '0' ]
    then
	DL=(a b c d e f g h i j k l m n o p q r s t u v w x y z)
	i=0
	s=0
	for DD in `cat /proc/partitions | awk '/disc/{ print $4 }'`
	do
	    TYPE=`echo $DD | sed -e 's:/.*$::g'`
	    case $TYPE in
		'ide')
		    eval hd${DL[$i]}=$DD
		    i=`expr $i + 1`
		    ;;
		'scsi')
		    eval sd${DL[$s]}=$DD
		    s=`expr $s + 1`
		    ;;
	    esac
	done
    fi
    HARDDRIVES=`df -l | awk '/^\/dev/{ sub('/[0-9]\+$/', "", $1); print $1 }' | sort -u`
    for HD in $HARDDRIVES
    do
	RRDFILE=$HOST.hd.io.`echo $HD | sed -e 's/\//_slash_/g'`.rrd
	if [ -e $RRDFILE ]
	then
	    if [ $ISDEVFS == '0' ]
	    then
		DISC=`echo $HD | sed -e 's:^/.\+/::g'`
		HD=`eval echo "$"${DISC}`
	    fi
	    read_sec=`$IOSTAT -d -x $HD | tail -2 | head -1 | awk '{ print $6 }' | sed -e 's/\,/\./g'`
	    write_sec=`$IOSTAT -d -x $HD | tail -2 | head -1 | awk '{ print $7 }' | sed -e 's/\,/\./g'`
	    rrdtool update $RRDFILE $LGDATE:$read_sec:$write_sec
	else
	    rrdtool create $RRDFILE --start $LGDATE DS:read_sec:GAUGE:600:0:U DS:write_sec:GAUGE:600:0:U RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576
	fi
    done
fi

#--------------------------------------------------------------------------------------
# Offset ntp sur le log loopstats
#--------------------------------------------------------------------------------------
echo "---> Offset NTP"
NTPDC=`which ntpdc` 
if test $NTPDC && test -x $NTPDC
then
    RRDFILE=$HOST.net.ntp.offset.rrd
    if [ -e $RRDFILE ]
    then
	offset=`$NTPDC -c loopinfo | head -1 | awk '{ print $2 }' `
	rrdtool update $RRDFILE $LGDATE:$offset
    else
	rrdtool create $RRDFILE --start $LGDATE DS:offset:GAUGE:600:U:U RRA:AVERAGE:0.5:1:576 RRA:AVERAGE:0.5:6:576 RRA:AVERAGE:0.5:24:576 RRA:AVERAGE:0.5:288:576
    fi
fi

#--------------------------------------------------------------------------------------
# Process Apache, connexion etablies et en time wait
#--------------------------------------------------------------------------------------
echo "---> Apache"
APACHE=/usr/sbin/apache
if test $APACHE && test -x $APACHE
then
    RRDFILE=$HOST.apache.rrd
    if [ -e $RRDFILE ]
    then
	PROCHTTP=`ps ax | grep -cE '(httpd|apache)'`
	CNXESTABLISHED=`netstat -n | grep -cE '(:80 |:443 ).*ESTABLISHED'`
	CNXTIMEWAIT=`netstat -n | grep -cE '(:80 |:443 ).*TIME_WAIT'`
	rrdtool update $RRDFILE $LGDATE:$PROCHTTP:$CNXESTABLISHED:$CNXTIMEWAIT
    else
	rrdtool create $RRDFILE --start $LGDATE \
	DS:prochttp:GAUGE:600:U:U \
	DS:cnx_established:GAUGE:600:U:U \
	DS:cnx_timewait:GAUGE:600:U:U \
	RRA:AVERAGE:0.5:1:576 \
	RRA:AVERAGE:0.5:6:576 \
	RRA:AVERAGE:0.5:24:576 \
	RRA:AVERAGE:0.5:288:576
    fi
fi
#--------------------------------------------------------------------------------------
echo "---> Fin update"
